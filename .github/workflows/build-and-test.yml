name: Build packages

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master, maint-1.4 ]
  pull_request:
    branches: [ master, maint-1.4 ]
  release:
    types: [ published,tags ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    make-rhel-pkg:
        name: Make RHEL package
        runs-on: ubuntu-latest
        container: centos:latest
        steps:
            - name: Prepare
              run: |
                yum update -y
                yum install -y make rpmdevtools yum-utils

            - name: Clone repo
              uses: actions/checkout@v2

            - name: Make package
              run: |
                yum-builddep --assumeyes packaging/rpm/*.spec
                make -C packaging/rpm pkg-local "DESTDIR=${GITHUB_WORKSPACE}/pkgs/"

            - name: Publish package
              uses: actions/upload-artifact@v1.0.0
              with:
                name: rhel-pkg
                path: pkgs

    make-x86-alpine-pkg:
        name: Make Alpine package
        runs-on: ubuntu-latest
        container: alpine:latest
        steps:
            - name: Prepare
              run: |
                apk update
                apk upgrade
                apk add make
                apk add alpine-sdk
                apk add go
                apk add su-exec

                adduser -G abuild -D jobber
                su jobber -c "abuild-keygen -an"
                find "/home/jobber/.abuild" -name '*.rsa.pub' -exec mv {} /etc/apk/keys/ ';'
                chown root:root /etc/apk/keys/*

            - name: Clone repo
              uses: actions/checkout@v2

            - name: Make package
              run: |
                chmod a+w . packaging/alpine
                su jobber -c "make -C packaging/alpine pkg-local DESTDIR=${GITHUB_WORKSPACE}/pkgs/"

            - name: Publish package
              uses: actions/upload-artifact@v1.0.0
              with:
                name: alpine-pkg
                path: pkgs
    make-alpine-arm64:
        name: Make Alpine Package for arm64 
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - run: |
              docker run --rm --privileged hypriot/qemu-register
          - uses: docker://arm64v8/alpine:latest
            with:
              args: 'sh .github/scripts/arm64_test.sh' 
          - run: |
              ls /home/runner/work/jobber/jobber/pkgs
          - uses: actions/upload-artifact@v1.0.0
            with:
                name: alpine-pkg-arm64
                path: pkgs
          - uses: actions/upload-release-asset@v1
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              # this is a release to the event is called release: https://help.github.com/en/actions/reference/events-that-trigger-workflows#release-event-release
              # the release event has the structure of this response https://developer.github.com/v3/repos/releases/#create-a-release
              upload_url: ${{ github.event.release.upload_url }}
              asset_path: pkgs
              asset_name: alpine-pkg-arm64
    make-debian-pkg:
        name: Make Debian package
        runs-on: ubuntu-latest
        steps:
            - name: Prepare
              run: |
                sudo apt-get update
                sudo apt-get install -y dpkg-dev debhelper dh-systemd
            - name: Clone repo
              uses: actions/checkout@v2
            - name: Build package
              run: make -C "${GITHUB_WORKSPACE}/packaging/debian" pkg-local "DESTDIR=${GITHUB_WORKSPACE}/pkgs/"
            - name: Publish package
              uses: actions/upload-artifact@v1.0.0
              with:
                name: debian-pkg
                path: pkgs
    make-wheel-linux-arm64:
        name: make alpine binary for linux arm64 
        runs-on: linux
        steps:
          - name: Checkout repo
            uses: actions/checkout@v2
          - name: Set up emulation
            run: |
              docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          - name: Container for arm64 
            uses: docker://arm64v8/alpine:latest
            with:
               args: 'sh .github/scripts/arm64_test.sh' 
          - name : Checking the binaries
            run: |
                ls /home/runner/work/jobber/jobber/pkgs
          - name: Upload wheel manylinux2014 to release
          # upload the generated manylinux2014 wheel to the github release. Only a single file per step can be uploaded at the moment
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
            # this is a release to the event is called release: https://help.github.com/en/actions/reference/events-that-trigger-workflows#release-event-release
            # the release event has the structure of this response https://developer.github.com/v3/repos/releases/#create-a-release
              upload_url: ${{ github.event.release.upload_url }}
              asset_path: pkgs
              asset_name: arm64
              asset_content_type: application/zip # application/octet-stream
